% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dump.R
\name{stone_dump}
\alias{stone_dump}
\title{Dump touchstone from database to CSV.}
\usage{
stone_dump(con, touchstone, path, include_deps = FALSE)
}
\arguments{
\item{con}{Active connection to the DB which the data will be dumped from.}

\item{touchstone}{the touchstone including version.}

\item{path}{the path where output CSVs should be created.}

\item{include_deps}{also dump db dependencies that Stoner can't
currently add - db_disease.csv, db_modelling_group.csv,
db_demographic_statistic_type.csv and db_demographic_source.csv.}
}
\description{
Query a database for all information relevant to a particular touchstone
(including version), and write to CSV files, which would then be fit for
stoner to use as its input to re-population the database with the same
touchstone. This would be useful in a workflow where you wanted to
clone a touchstone, alter a few things, and upload as a new version.
}
\details{
Note that this is not "lossless"; only things that Stoner has the capability
of adding, will be stored in the CSVs. For example (at present), Stoner
does nothing with coverage sets, so while the scenario_descriptions will
be saved (since they can be re-added),
scenario_description.focal_coverage_set will not be dumped, because
Stoner cannot put it back. Coverage sets will need to be wired up
separately after a Stoner import, as before.
}
